---
name: 'Update Version'
on:
  pull_request:
    branches:
      - "master"

# Stop in progress workflows on the same branch and same workflow to use latest committed code
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-image-version:
    name: 'Set Image Version'
    runs-on: [self-hosted, linux, flyweight]
    outputs:
      image-version: ${{ steps.image-version.outputs.kontrol_version }}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Set Image Version'
        id: image-version
        run: |
          kontrol_version=$(cat deps/kontrol_release)
          echo "kontrol_version=${kontrol_version}" >> $GITHUB_ENV

  new-version-test:
    name: 'Test Tool Update'
    runs-on: [self-hosted, linux, normal]
    needs: [set-image-version]
    container:
      image: runtimeverificationinc/kontrol:ubuntu-jammy-${{ needs.set-image-version.outputs.image-version }}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: 'Configure GitHub user'
        run: |
          git config user.name devops
          git config user.email devops@runtimeverification.com

      - name: 'Test New Tool Versions'
        run: |
          set -euo pipefail
          new-version=$(cat deps/kontrol_release)
          kup install --version ${new-version}
          # If all scripts in test.sh pass then the test is successful, else fail 
          # and print the name of the script that failed
          for script in ./tests/*.sh; do
              if ! bash "$script"; then
                  echo "Test failed: $script"
                  exit 1
              else
                  echo "Test passed: $script"
              fi
          done
